% GUI for the hair removal, create using GUIDE matlab tool
function varargout = gui(varargin)
% Begin initialization code (code generated by GUIDE)
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @gui_OpeningFcn, ...
                   'gui_OutputFcn',  @gui_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code 
end

% --- Executes just before gui is made visible. (generated by GUIDE)
function gui_OpeningFcn(hObject, eventdata, handles, varargin)
% sets default settings of the GUI which is executed before gui is visible

handles.output = hObject;
guidata(hObject, handles); % updates hObject and handles class objects
a=ones(256,256); % creates a white matrix
% sets every axe (image box) in the gui to 'a' or a white image
axes(handles.axes1); 
imshow(a);
axes(handles.axes2);
imshow(a);
axes(handles.axes3);
imshow(a);
guidata(hObject, handles); % updates objects
end

% --- Outputs from this function are returned to the command line.
% (generated by GUIDE)
function varargout = gui_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;
end

% --- Executes when Upload Image button is pressed.
function UploadImage_Callback(hObject, eventdata, handles)
% hObject    handle to UploadImage (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

[file,path] = uigetfile('*bmp','File Selector'); % opends file explorer
% only images of format 'bmp' can be opened, im order to use other images 
% replace 'bmp*' by the format of the image--> example: 'jpg*'
Imagelocation = strcat(path,file); % saves image location
Image = im2double(imread(Imagelocation)); % Reads images 
imshow(Image, 'Parent', handles.axes1); % displays image in axe 1
handles.I = Image; % saves image in handle object so it can be accessed
% from another function
guidata(hObject, handles); % update handle object
end

% --- Executes when Generate mask button is pressed
function GenerateMask_Callback(hObject, eventdata, handles)
% hObject    handle to GenerateMask (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
Image = handles.I; % gets image from handles object
Imagemask = ImageMask(Image); % calls the image mask function to 
% generate the mask with the image as an input
handles.mask = Imagemask; % saves mask in handle object to be used in another function
imwrite(Imagemask,'Image mask.bmp');
imshow(Imagemask, 'Parent', handles.axes2); % displays mask in axe 2
guidata(hObject, handles);
end

% --- Executes when Remove hair button is pressed
function RemoveHair_Callback(hObject, eventdata, handles)
% hObject    handle to RemoveHair (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% The hair removal process can take up to 5 minutes (Aprox.) according to the uploaded
% image
%msgbox('wait for few minutes to process');  % display a waiting message
Imagemask = handles.mask; % get mask from handles object
Image = handles.I; % get image from handles object
ImageFixed = ImageInpainting(Image,Imagemask); % call the inpainting algorithm function
imshow(ImageFixed, 'Parent', handles.axes3); % display the fixed image in axe 3
imwrite(ImageFixed,'Output image.bmp');
guidata(hObject, handles);
end

% --- Executes when Clear button is pressed.
function clear_Callback(hObject, eventdata, handles)
% sets every axes back to default (white)
a=ones(256,256);
axes(handles.axes1);
imshow(a);
axes(handles.axes2);
imshow(a);
axes(handles.axes3);
imshow(a);
end

% --- Executes when Exit button is pressed.
function Exit_Callback(hObject, eventdata, handles)
% Closes the GUI
clc
clear
close(gui)
end
